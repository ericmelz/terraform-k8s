apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hosty.fullname" . }}
  labels:
    {{- include "hosty.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hosty.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hosty.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.encryptedConfig }}
      initContainers:
      - name: decrypt-config
        image: alpine:latest
        command:
        - /bin/sh
        - -c
        - |
          apk add --no-cache gnupg
          echo "Encrypted config file info:"
          ls -la /encrypted-config/
          file /encrypted-config/.env.gpg || true
          echo "First bytes of encrypted file:"
          head -c 50 /encrypted-config/.env.gpg | base64
          echo ""
          echo "Decrypting configuration..."
          gpg --batch --passphrase "$GPG_PASSPHRASE" \
            --decrypt /encrypted-config/.env.gpg > /decrypted-config/.env 2>&1
          echo "Decryption exit code: $?"
          echo "Decrypted file contents:"
          ls -la /decrypted-config/
          cat /decrypted-config/.env || echo "Failed to read decrypted file"
        env:
        - name: GPG_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ include "hosty.fullname" . }}
              key: GPG_PASSPHRASE
        volumeMounts:
        - name: encrypted-config
          mountPath: /encrypted-config
          readOnly: true
        - name: decrypted-config
          mountPath: /decrypted-config
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        {{- if .Values.env }}
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.secrets }}
        {{- range $key, $value := .Values.secrets }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ include "hosty.fullname" $ }}
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- if .Values.encryptedConfig }}
        volumeMounts:
        - name: decrypted-config
          mountPath: /app/config
          readOnly: true
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.encryptedConfig }}
      volumes:
      - name: encrypted-config
        configMap:
          name: {{ include "hosty.fullname" . }}-encrypted-config
      - name: decrypted-config
        emptyDir: {}
      {{- end }}